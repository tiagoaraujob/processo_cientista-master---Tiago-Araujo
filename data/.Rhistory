library(tidyverse)
library(factoextra)
library(lubridate)
library(caret)
getmode <- function(v) {
uniqv <- unique(v[which(!is.na(v))])
uniqv[which.max(tabulate(match(v, uniqv)))]
}
setwd("./processo_cientista-master/data")
rain_data <- read_csv("rain_data_aus.csv",
col_types = cols(evaporation = col_double(),
sunshine = col_double()))
cities = unique(rain_data$location)
cities = unique(rain_data$location)
cities
world_cities = read_csv("worldcities.csv")
world_cities = world_cities %>% filter(country == "Australia")
cities = dataframe(city = unique(rain_data$location))
cities = data.frame(city = unique(rain_data$location))
View(world_cities)
teste = cities %>% left_join(world_cities)
cities = data.frame(city = unique(rain_data$location))
teste = cities %>% left_join(world_cities)
View(teste)
teste = cities %>% left_join(world_cities %>% select(city,lat,lng))
world_cities$city = as.factor(world_cities$city)
teste = cities %>% left_join(world_cities %>% select(city,lat,lng))
world_cities = world_cities %>% filter(country == "Australia")
cities = data.frame(city = unique(rain_data$location),stringsAsFactors = F)
world_cities = read_csv("worldcities.csv")
world_cities = world_cities %>% filter(country == "Australia")
cities = data.frame(city = unique(rain_data$location))
teste = cities %>% left_join(world_cities %>% select(city,lat,lng))
cities = data.frame(city = unique(rain_data$location),stringsAsFactors = F)
teste = cities %>% left_join(world_cities %>% select(city,lat,lng))
View(teste)
library(ggmap)
teste
View(rain_data)
sum(is.na(teste$lat))
View(world_cities)
View(rain_data)
View(rain_data)
aux = rain_data %>% filter(location = 'Richmond')
aux = rain_data %>% filter(location == 'Richmond')
min(aux$mintemp)
max(aux$maxtemp)
max(aux$maxtemp,na.rm = T)
min(aux$mintemp,na.rm = T)
mean(aux$temp3pm)
mean(aux$temp3pm,na.rm = T)
mean(aux$temp9am,na.rm = T)
mean(aux$temp,na.rm = T)
mean(aux$humidity,na.rm = T)
world_cities = world_cities %>% filter(-(city=="Richmond" & admin_name == "Queensland"))
world_cities = world_cities[-which(city=="Richmond" & admin_name == "Queensland"),]
world_cities = world_cities[-which(world_cities$city=="Richmond" & world_cities$admin_name == "Queensland"),]
teste = cities %>% left_join(world_cities %>% select(city,lat,lng))
sum(is.na(teste$lat))
cities$city
cities = data.frame(city = unique(rain_data$location),stringsAsFactors = F)
cities$city[cities$city=='BadgerysCreek'] = 'Badgerys Creek'
cities$city[cities$city=='CoffsHarbour'] = 'Coffs Harbour'
cities$city[cities$city=='NorahHead'] = 'Norah Head'
cities$city[cities$city=='NorfolkIsland'] = 'Norfolk Island'
cities$city[cities$city=='WaggaWagga'] = 'Wagga Wagga'
cities$city[cities$city=='GoldCoast'] = 'Gold Coast'
cities$city[cities$city=='MountGambier'] = 'Mount Gambier'
cities$city[cities$city=='SalmonGums'] = 'Salmon Gums'
cities$city[cities$city=='AliceSprings'] = 'Alice Springs'
teste = cities %>% left_join(world_cities %>% select(city,lat,lng))
sum(is.na(teste$lat))
View(teste)
teste[teste$city=='Badgerys Creek',c(2,3)]=c(-33.882370, 150.746033)
teste[teste$city=='Cobar',c(2,3)]=c(-31.468785, 145.816318)
teste[teste$city=='Norah Head',c(2,3)]=c(-33.283542, 151.563123)
teste[teste$city=='Norfolk Island',c(2,3)]=c(-29.029169, 167.955978)
teste[teste$city=='Penrith',c(2,3)]=c(-33.744418, 150.697086)
teste[teste$city=='SydneyAirport',c(2,3)]=c(-33.939698, 151.175281)
teste[teste$city=='Williamtown',c(2,3)]=c(-32.804688, 151.839127)
teste[teste$city=='Tuggeranong',c(2,3)]=c(-35.440370, 149.099959)
teste[teste$city=='MountGinini',c(2,3)]=c(-35.529364, 148.772256)
teste[teste$city=='MelbourneAirport',c(2,3)]=c(-37.671120, 144.851108)
teste[teste$city=='Nhil',c(2,3)]=c(-36.293557, 141.597749)
teste[teste$city=='Watsonia',c(2,3)]=c(-37.709035, 145.082129)
teste[teste$city=='Dartmoor',c(2,3)]=c(-37.914406, 141.273006)
city_coord = cities %>% left_join(world_cities %>% select(city,lat,lng))
sum(is.na(city_coord$lat))
city_coord[city_coord$city=='Badgerys Creek',c(2,3)]=c(-33.882370, 150.746033)
city_coord[city_coord$city=='Cobar',c(2,3)]=c(-31.468785, 145.816318)
city_coord[city_coord$city=='Norah Head',c(2,3)]=c(-33.283542, 151.563123)
city_coord[city_coord$city=='Norfolk Island',c(2,3)]=c(-29.029169, 167.955978)
city_coord[city_coord$city=='Penrith',c(2,3)]=c(-33.744418, 150.697086)
city_coord[city_coord$city=='SydneyAirport',c(2,3)]=c(-33.939698, 151.175281)
city_coord[city_coord$city=='Williamtown',c(2,3)]=c(-32.804688, 151.839127)
city_coord[city_coord$city=='Tuggeranong',c(2,3)]=c(-35.440370, 149.099959)
city_coord[city_coord$city=='MountGinini',c(2,3)]=c(-35.529364, 148.772256)
city_coord[city_coord$city=='MelbourneAirport',c(2,3)]=c(-37.671120, 144.851108)
city_coord[city_coord$city=='Nhil',c(2,3)]=c(-36.293557, 141.597749)
city_coord[city_coord$city=='Watsonia',c(2,3)]=c(-37.709035, 145.082129)
city_coord[city_coord$city=='Dartmoor',c(2,3)]=c(-37.914406, 141.273006)
View(city_coord)
city_coord[city_coord$city=='Badgerys Creek',c(2,3)]=c(-33.882370, 150.746033)
city_coord[city_coord$city=='Cobar',c(2,3)]=c(-31.468785, 145.816318)
city_coord[city_coord$city=='Norah Head',c(2,3)]=c(-33.283542, 151.563123)
city_coord[city_coord$city=='Norfolk Island',c(2,3)]=c(-29.029169, 167.955978)
city_coord[city_coord$city=='Penrith',c(2,3)]=c(-33.744418, 150.697086)
city_coord[city_coord$city=='SydneyAirport',c(2,3)]=c(-33.939698, 151.175281)
city_coord[city_coord$city=='Williamtown',c(2,3)]=c(-32.804688, 151.839127)
city_coord[city_coord$city=='Tuggeranong',c(2,3)]=c(-35.440370, 149.099959)
city_coord[city_coord$city=='MountGinini',c(2,3)]=c(-35.529364, 148.772256)
city_coord[city_coord$city=='MelbourneAirport',c(2,3)]=c(-37.671120, 144.851108)
city_coord[city_coord$city=='Nhil',c(2,3)]=c(-36.293557, 141.597749)
city_coord[city_coord$city=='Watsonia',c(2,3)]=c(-37.709035, 145.082129)
city_coord[city_coord$city=='Dartmoor',c(2,3)]=c(-37.914406, 141.273006)
city_coord[city_coord$city=='Witchcliffe',c(2,3)]=c(-34.016851, 115.097303)
city_coord[city_coord$city=='Walpole',c(2,3)]=c(-34.972687, 116.760702)
city_coord[city_coord$city=='Uluru',c(2,3)]=c(-25.344377, 131.036974)
city_coord[city_coord$city=='Salmon Gums',c(2,3)]=c(-32.837914, 121.618731)
city_coord[city_coord$city=='PerthAirport',c(2,3)]=c(-31.938707, 115.968378)
city_coord[city_coord$city=='PearceRAAF',c(2,3)]=c(-31.667587, 116.029247)
city_coord[city_coord$city=='Nuriootpa',c(2,3)]=c(-34.463914, 138.984128)
city_coord$city = str_replace(city_coord," ","")
city_coord$city = str_replace(city_coord$city," ","")
View(city_coord)
write.csv(city_coord,"city_coord",row.names = F)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(factoextra)
setwd("./processo_cientista-master/data")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(factoextra)
library(lubridate)
library(caret)
getmode <- function(v) {
uniqv <- unique(v[which(!is.na(v))])
uniqv[which.max(tabulate(match(v, uniqv)))]
}
setwd("./processo_cientista-master/data")
setwd("./processo_cientista-master/data")
setwd("./processo_cientista-master/data")
getwd()
rain_data <- read_csv("rain_data_aus.csv",
col_types = cols(evaporation = col_double(),
sunshine = col_double()))
for(i in 1:8){
file = paste0("wind_table_0",i,".csv")
if(i==1){
wind_data = read_csv(file)
cols = names(wind_data)
}
else{
aux = read_csv(file)
names(aux) = cols
wind_data = rbind(wind_data,aux)
}
}
rain_data$location = factor(rain_data$location)
rain_data$raintoday = factor(rain_data$raintoday)
rain_data$raintomorrow = factor(rain_data$raintomorrow)
summary(rain_data)
sum(is.na(rain_data))
ggplot(rain_data,aes(raintomorrow)) + geom_bar() + theme_bw() + ylab("Contagem")
ggplot(rain_data,aes(raintoday, fill = raintomorrow)) + geom_bar(position = "dodge") + theme_bw() + ylab("Contagem")
rain_data %>% filter(raintoday=="Yes") %>% ggplot(aes(y=amountOfRain,x=raintomorrow)) + geom_boxplot() + theme_bw()
ggplot(rain_data,aes(location, fill = raintomorrow)) + geom_bar(position = "dodge") + theme_bw() + ylab("Contagem") + theme(axis.text.x = element_text(angle = 90))
medias_mes_local = rain_data %>% group_by(location,Mes = month(date)) %>%
summarise_at(vars(mintemp:temp3pm,"temp","humidity"),funs(mean(.,na.rm = T)))
names(medias_mes_local)[-c(1,2)] = paste0("Media_",names(medias_mes_local)[-c(1,2)])
rain_data = rain_data %>% mutate(Dia = day(date), Mes = month(date), Ano = year(date))
rain_data_clean_1 = rain_data %>% left_join(medias_mes_local, by = c("location","Mes")) %>%
mutate(mintemp = coalesce(mintemp, Media_mintemp),
maxtemp = coalesce(maxtemp, Media_maxtemp),
rainfall = coalesce(rainfall, Media_rainfall),
evaporation = coalesce(evaporation, Media_evaporation),
sunshine = coalesce(sunshine, Media_sunshine),
humidity9am = coalesce(humidity9am, Media_humidity9am),
humidity3pm = coalesce(humidity3pm, Media_humidity3pm),
pressure9am = coalesce(pressure9am, Media_pressure9am),
pressure3pm = coalesce(pressure3pm, Media_pressure3pm),
cloud9am = coalesce(cloud9am, Media_cloud9am),
cloud3pm = coalesce(cloud3pm, Media_cloud3pm),
temp9am = coalesce(temp9am, Media_temp9am),
temp3pm = coalesce(temp3pm, Media_temp3pm),
temp = coalesce(temp, Media_temp),
humidity = coalesce(humidity, Media_humidity)) %>% select(-contains("Media_"))
sum(is.na(rain_data_clean))
sum(is.na(rain_data_clean_1))
dup = wind_data %>% group_by(location,date) %>% count()
table(dup$n)
sum(duplicated(wind_data))
wind_data = wind_data[!duplicated(wind_data),]
wind_data$wind_gustdir[wind_data$wind_gustspeed==0] = "X"
wind_data$wind_dir9am[wind_data$wind_speed9am==0] = "X"
wind_data$wind_dir3pm[wind_data$wind_speed3pm==0] = "X"
sum(is.na(wind_data))
wind_data$location = as.factor(wind_data$location)
wind_data$wind_gustdir = as.factor(wind_data$wind_gustdir)
wind_data$wind_dir9am = as.factor(wind_data$wind_dir9am)
wind_data$wind_dir3pm = as.factor(wind_data$wind_dir3pm)
winddir_location_mes = wind_data %>% group_by(location,Mes = month(date)) %>% summarise_at(vars(contains("dir")),funs(getmode))
summary(wind_location_mes)
names(winddir_location_mes)[-c(1,2)] = paste0("Mode_",names(winddir_location_mes)[-c(1,2)])
wind_data = wind_data %>% mutate(Mes = month(wind_data$date))
wind_data_clean_1 = wind_data %>% left_join(winddir_location_mes, by = c("location","Mes")) %>%
mutate(wind_gustdir = coalesce(wind_gustdir, Mode_wind_gustdir),
wind_dir9am = coalesce(wind_dir9am, Mode_wind_dir9am),
wind_dir3pm = coalesce(wind_dir3pm, Mode_wind_dir3pm)) %>% select(-contains("Mode_"))
sum(is.na(wind_data_clean_1))
summary(wind_data_clean_1)
windspd_9am_location_mes = wind_data_clean_1 %>% group_by(location,Mes,wind_dir9am) %>%
summarise(Media_wind_speed9am = mean(wind_speed9am,na.rm = T))
wind_data_clean_2 = wind_data_clean_1 %>% left_join(windspd_9am_location_mes, by = c("location","Mes","wind_dir9am")) %>%
mutate(wind_speed9am = coalesce(wind_speed9am, Media_wind_speed9am)) %>%
select(-Media_wind_speed9am)
windspd_3pm_location_mes = wind_data_clean_1 %>% group_by(location,Mes,wind_dir3pm) %>%
summarise(Media_wind_speed3pm = mean(wind_speed3pm,na.rm = T))
wind_data_clean_3 = wind_data_clean_2 %>% left_join(windspd_3pm_location_mes, by = c("location","Mes","wind_dir3pm")) %>%
mutate(wind_speed3pm = coalesce(wind_speed3pm, Media_wind_speed3pm)) %>%
select(-Media_wind_speed3pm)
summary(wind_data_clean_3)
wind_data_clean_3 = wind_data_clean_3 %>% select(-Mes)
rain_wind_data = rain_data_clean_1 %>% left_join(wind_data_clean_3, by = c("location","date"))
summary(rain_wind_data)
write.csv(city_coord,"city_coord.csv",row.names = F)
coords = read_csv("city_coord.csv")
rain_wind_data_coords = rain_wind_data %>% left_join(coords)
rain_wind_data_coords = rain_wind_data %>% left_join(coords, by="location"="city")
rain_wind_data_coords = rain_wind_data %>% left_join(coords, by=c("location"="city"))
View(rain_wind_data_coords)
cols_sem_na = c("location","mintemp", "maxtemp", "rainfall", "humidity9am", "humidity3pm", "temp9am", "temp3pm",
"amountOfRain", "temp", "humidity", "precipitation3pm", "precipitation9am", "wind_dir9am", "wind_dir3pm",
"wind_speed9am", "wind_speed3pm","lat","lng")
df_clust = rain_wind_data[,cols_sem_na]
df_clust = rain_wind_data_coords[,cols_sem_na]
df_clust = df_clust %>% group_by(location) %>%
summarise_all(funs(if(is.numeric(.)) mean(., na.rm = TRUE) else getmode(.)))
View(df_clust)
str(df_clust)
df_clust_prep = df_clust %>% mutate_if(is.numeric,scale)
k.max <- 20
data <- model.matrix(location~.,df_clust_prep)[,-1]
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=50,iter.max = 15 )$tot.withinss})
wss
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
mod_kmeans = kmeans(data, 6, nstart=50,iter.max = 15 )
mod_kmeans
cols_sem_na = c("location","mintemp", "maxtemp", "rainfall", "humidity9am", "humidity3pm", "temp9am", "temp3pm",
"amountOfRain", "temp", "humidity", "precipitation3pm", "precipitation9am", "wind_dir9am", "wind_dir3pm",
"wind_speed9am", "wind_speed3pm","lat","lng")
df_clust = rain_wind_data_coords[,cols_sem_na]
df_clust$wind_dir3pm = as.character(df_clust$wind_dir3pm)
df_clust$wind_dir9am = as.character(df_clust$wind_dir9am)
df_clust = df_clust %>% group_by(location) %>%
summarise_all(funs(if(is.numeric(.)) mean(., na.rm = TRUE) else getmode(.)))
df_clust$wind_dir3pm = as.factor(df_clust$wind_dir3pm)
df_clust$wind_dir9am = as.factor(df_clust$wind_dir9am)
df_clust_prep = df_clust %>% mutate_if(is.numeric,scale)
k.max <- 20
data <- model.matrix(location~.,df_clust_prep)[,-1]
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=50,iter.max = 15 )$tot.withinss})
wss
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
df_clust = rain_wind_data_coords[,cols_sem_na]
df_clust$wind_dir3pm = as.character(df_clust$wind_dir3pm)
df_clust$wind_dir9am = as.character(df_clust$wind_dir9am)
df_clust = df_clust %>% group_by(location) %>%
summarise_all(funs(if(is.numeric(.)) mean(., na.rm = TRUE) else getmode(.)))
df_clust$wind_dir3pm = as.factor(df_clust$wind_dir3pm)
df_clust$wind_dir9am = as.factor(df_clust$wind_dir9am)
#df_clust_prep = df_clust %>% mutate_if(is.numeric,scale)
k.max <- 20
data <- model.matrix(location~.,df_clust_prep)[,-1]
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=50,iter.max = 15 )$tot.withinss})
wss
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
df_clust = rain_wind_data_coords[,cols_sem_na]
df_clust$wind_dir3pm = as.character(df_clust$wind_dir3pm)
df_clust$wind_dir9am = as.character(df_clust$wind_dir9am)
df_clust = df_clust %>% group_by(location) %>%
summarise_all(funs(if(is.numeric(.)) mean(., na.rm = TRUE) else getmode(.)))
df_clust$wind_dir3pm = as.factor(df_clust$wind_dir3pm)
df_clust$wind_dir9am = as.factor(df_clust$wind_dir9am)
df_clust_prep = df_clust %>% mutate_if(is.numeric,scale)
k.max <- 20
data <- model.matrix(location~.,df_clust_prep)[,-1]
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=50,iter.max = 15 )$tot.withinss})
wss
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
mod_kmeans = kmeans(data, 6, nstart=50,iter.max = 15 )
rownames(data) <- paste0(df_clust$location)
fviz_cluster(mod_kmeans, data = data)
df_clust$Cluster = mod_kmeans$cluster
aust_map = get_map(location = "Australia", zoom = 4)
detach("package:ggmap", unload = TRUE)
library(leaflet)
install.packages("leaflet")
library(leaflet)
df_clust$Cluster = as.factor(mod_kmeans$cluster)
m <- leaflet() %>% addTiles() %>%  addCircles(lng = ~lng, lat = ~lat, color = ~Cluster)
m <- leaflet(df_clust) %>% addTiles() %>%  addCircles(lng = ~lng, lat = ~lat, color = ~Cluster)
m
m <- leaflet(df_clust) %>% addTiles() %>%  addCircles(lng = ~lng, lat = ~lat, color = ~Cluster,weight = 1)
m
?pal
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~Cluster)
m
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~Cluster, stroke = FALSE)
m
install.packages("viridisLite")
library(viridisLite)
domain <- range(df_clust$Cluster)
pal <- colorNumeric(palette = viridis(100), domain = levels(df_clust$Cluster))
levels(df_clust$Cluster)
pal <- colorFactor(palette = viridis(100), domain = levels(df_clust$Cluster))
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE)
m
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE,fillOpacity = 0.5)
m
pal <- colorFactor(palette = viridis(6), domain = levels(df_clust$Cluster))
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE,fillOpacity = 0.5)
m
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE,fillOpacity = 1)
m
pal <- colorFactor(c("blue","yellow","green","red","purple","gray"), domain = levels(df_clust$Cluster))
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE,fillOpacity = 1)
m
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE,fillOpacity = 1, popup = ~location)
m
mod_kmeans = kmeans(data, 5, nstart=50,iter.max = 15 )
df_clust$Cluster = as.factor(mod_kmeans$cluster)
pal <- colorFactor(c("blue","yellow","green","red","purple","gray"), domain = levels(df_clust$Cluster))
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE,fillOpacity = 1, popup = ~location)
m
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE,fillOpacity = .5, popup = ~location)
m
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE,fillOpacity = .8, popup = ~location)
m
pal <- colorFactor(c("blue","yellow","green","red","purple","gray","orange"), domain = levels(df_clust$Cluster))
mod_kmeans = kmeans(data, 7, nstart=50,iter.max = 15 )
df_clust$Cluster = as.factor(mod_kmeans$cluster)
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE,fillOpacity = .8, popup = ~location)
pal <- colorFactor(c("blue","yellow","green","red","purple","gray","orange"), domain = levels(df_clust$Cluster))
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE,fillOpacity = .8, popup = ~location)
m
mod_kmeans = kmeans(data, 6, nstart=50,iter.max = 15 )
df_clust$Cluster = as.factor(mod_kmeans$cluster)
pal <- colorFactor(c("blue","yellow","green","red","purple","gray","orange"), domain = levels(df_clust$Cluster))
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE,fillOpacity = .8, popup = ~location)
m
mod_kmeans = kmeans(data, 5, nstart=50,iter.max = 15 )
fviz_cluster(mod_kmeans, data = data)
pal <- colorFactor(c("blue","yellow","green","red","purple","gray","orange"), domain = levels(df_clust$Cluster))
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE,fillOpacity = .8, popup = ~location)
m
pal <- colorFactor(c("blue","yellow","green","red","purple"), domain = levels(df_clust$Cluster))
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE,fillOpacity = .8, popup = ~location)
m
mod_kmeans = kmeans(data, 6, nstart=50,iter.max = 15 )
df_clust$Cluster = as.factor(mod_kmeans$cluster)
pal <- colorFactor(c("blue","yellow","green","red","purple","black"), domain = levels(df_clust$Cluster))
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE,fillOpacity = .8, popup = ~location)
m
table(df_clust$Cluster)
mod_kmeans = kmeans(data, 5, nstart=50,iter.max = 15 )
df_clust$Cluster = as.factor(mod_kmeans$cluster)
table(df_clust$Cluster)
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE,fillOpacity = .8, popup = ~location) %>% addLegend("topright", pal = pal, values = ~Cluster,
title = "Cluster",
labFormat = labelFormat(prefix = "$"),
opacity = 1
)
m
mod_kmeans = kmeans(data, 6, nstart=50,iter.max = 15 )
df_clust$Cluster = as.factor(mod_kmeans$cluster)
pal <- colorFactor(c("blue","yellow","green","red","purple","black"), domain = levels(df_clust$Cluster))
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE,fillOpacity = .8, popup = ~location) %>% addLegend("topright", pal = pal, values = ~Cluster,
title = "Cluster",
labFormat = labelFormat(prefix = "$"),
opacity = 1
)
m
mod_kmeans = kmeans(data, 5, nstart=50,iter.max = 15 )
df_clust$Cluster = as.factor(mod_kmeans$cluster)
pal <- colorFactor(c("blue","yellow","green","red","purple","black"), domain = levels(df_clust$Cluster))
m <- leaflet(df_clust) %>% addTiles() %>%  addCircleMarkers(lng = ~lng, lat = ~lat, color = ~pal(Cluster), stroke = FALSE,fillOpacity = .8, popup = ~location) %>% addLegend("topright", pal = pal, values = ~Cluster,
title = "Cluster",
labFormat = labelFormat(prefix = "$"),
opacity = 1
)
m
fviz_cluster(mod_kmeans, data = data)
